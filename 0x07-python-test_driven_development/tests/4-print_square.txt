This library is very simple, since it only has one function called
``print_square``.

``print_square`` prints a string representation of a square

::

>>> print_square = __import__('4-print_square').print_square
>>> print_square(4)
####
####
####
####

>>> print_square(3)
###
###
###

Invalid type for inputs
=======================

Because the function only demands integers as input for the size it raises a type exception if it encounters another type of any other argument.

>>> print_square('str')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/codedev/Projects/alx-higher_level_programming/0x07-python-test_driven_development/4-print_square.py", line 11, in print_square
    raise TypeError("size must be an integer")
TypeError: size must be an integer

If the input is a negative number it also raise an exception but a value exception

>>> print_square(-4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/codedev/Projects/alx-higher_level_programming/0x07-python-test_driven_development/4-print_square.py", line 13, in print_square
    raise ValueError("size must be >= 0")
ValueError: size must be >= 0

If the input is a float and is less than 0 it also raises a type exception
>>> print_square(-4.4994432)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/codedev/Projects/alx-higher_level_programming/0x07-python-test_driven_development/4-print_square.py", line 9, in print_square
    raise TypeError("size must be >= 0")
TypeError: size must be >= 0

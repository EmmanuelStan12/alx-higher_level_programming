===============================
 How to Use doctest_in_help.py
===============================

This library is very simple, since it only has one function called
``matrix_divided()``.

Numbers
=======

``matrix_divided`` returns a list of lists with each element divided by a divisor.

::

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

The matrix division also applies to divisors that are infinite floats

>>> matrix = [
... [1, 2, 3],
... [3, 4, 5]
... ]
>>> matrix_divided(matrix, float('inf'))
[[0.1, 0.2, 0.3], [0.3, 0.4, 0.5]]

>>> matrix = [
... [0.0, 0.0, 0.0],
... [0.0, 0.0, 0.0]
... ]
>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Non-Numbers
===========

Because the function only demands a matrix(list of lists) it raises an exception if it encounters another type of any other argument.

::

>>> matrix = [
... "str",
... [1, 3, 4]
... ]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/codedev/Projects/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 19, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats

::

It also raises an exception if any of the elements in the lists is not a float or an integer.

>>> matrix = [[1, 3, 'a'], [1, 3, 54]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/codedev/Projects/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 22, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats

::

It also raises an exception if any list in the matrix has a variant size than the rest

>>> matrix = [[1, 3], [1, 3, 4]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/codedev/Projects/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 27, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size

It also throws an exception when the divisor is zero

>>> matrix = [[1, 3], [1, 3]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/codedev/Projects/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 31, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero

===============================
 	BaseGeometry
===============================

This library is very simple, since it only has one function called
integer_validator(self, name, value).

Correct type (integer)
======================

Test Case 1

::

>>> BG = __import__('7-base_geometry').BaseGeometry
>>> bg = BG()
>>> bg.integer_validator("int", 12)
>>> bg.integer_validator("float", 13)

::

Wrong Type
===========

Test Case 2

::

>>> bg.integer_validator("float", -2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/codedev/Projects/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 17, in integer_validator
    raise ValueError("{} must be greater than 0".format(name))
ValueError: float must be greater than 0

Test Case 3

>>> bg.integer_validator("float", 'str')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/codedev/Projects/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 15, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: float must be an integer
